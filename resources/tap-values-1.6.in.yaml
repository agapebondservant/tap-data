shared:
  ingress_domain: ${DATA_E2E_GIT_TAP_GUI_INGRESS}
  image_registry:
    project_path: ${DATA_E2E_GIT_TAP_REGISTRY_SERVER}/${DATA_E2E_REGISTRY_USERNAME}
    secret:
      name: registry-credentials
      namespace: tap-install
  ca_cert_data: |
    ${TAP_1_6_KUBECONFIG_CA_B64}
profile: full
ceip_policy_disclosed: true
excluded_packages:
  - contour.tanzu.vmware.com
buildservice:
  kp_default_repository: ${DATA_E2E_GIT_TAP_REGISTRY_SERVER}/${DATA_E2E_REGISTRY_USERNAME}/tap-build-service
  kp_default_repository_secret:
    name: registry-credentials
    namespace: tap-install
  exclude_dependencies: true
supply_chain: basic
scanning:
  metadataStore:
    url: ""
# contour:
#  infrastructure_provider: aws
#  envoy:
#    service:
#      type: LoadBalancer
# annotations:
  # This annotation is for air-gapped AWS only.
    # service.kubernetes.io/aws-load-balancer-internal: "true"

ootb_supply_chain_basic:
  registry:
    server: ${DATA_E2E_GIT_TAP_REGISTRY_SERVER} # Takes the value from the shared section by default, but can be overridden by setting a different value.
    repository: ${DATA_E2E_REGISTRY_USERNAME} # Takes the value from the shared section by default, but can be overridden by setting a different value.

accelerator:
  ingress:
    include: true
    enable_tls: false
  git_credentials:
    secret_name: git-credentials
    username: ${DATA_E2E_GIT_USER}
    password: ${DATA_E2E_GIT_TOKEN}

appliveview:
  ingressEnabled: true

learningcenter:
  ingressDomain: ${DATA_E2E_GIT_TAP_GUI_INGRESS}

cnrs:
  domain_name: ${DATA_E2E_GIT_TAP_GUI_INGRESS}
  ingress:
    # reuse_crds: true
    external:
      namespace: projectcontour
    internal:
      namespace: projectcontour

appliveview_connector:
  backend:
    ingressEnabled: true
    sslDeactivated: false
    host: appliveview.${DATA_E2E_GIT_TAP_GUI_INGRESS}
    caCertData: |-
      ${TAP_1_6_KUBECONFIG_CA_B64}

# local_source_proxy:
  # Takes the value from the project_path under the image_registry section of shared by default, but can be overridden by setting a different value.
  # repository:
  # push_secret:
    # When set to true, the secret mentioned in this section is automatically exported to Local Source Proxy's namespace.
    # name: "EXTERNAL-REGISTRY-FOR-LOCAL-SOURCE-SECRET"
    # namespace: "EXTERNAL-REGISTRY-FOR-LOCAL-SOURCE-SECRET-NAMESPACE"
    # When set to true, the secret mentioned in this section is automatically exported to Local Source Proxy's namespace.
    # create_export: true

tap_gui:
  ingressEnabled: true
  ingressDomain: ${DATA_E2E_GIT_TAP_GUI_INGRESS}
  service_type: ClusterIP
  app_config:
    auth:
      allowGuestAccess: true  # This allows unauthenticated users to log in to your portal. If you want to deactivate it, make sure you configure an alternative auth provider.
    kubernetes:
      serviceLocatorMethod:
        type: multiTenant
      clusterLocatorMethods:
        - type: config
          clusters:
            - url: ${TAP_1_6_KUBEURL}
              name: host
              authProvider: serviceAccount
              serviceAccountToken: ${TAP_1_6_KUBETOKEN}
              skipTLSVerify: false
              caData: ${TAP_1_6_KUBECONFIG_CA}
    catalog:
      locations:
        - type: url
          target: ${DATA_E2E_GIT_TAP_CATALOG_PATH}/catalog-info.yaml
    #Example Integration for custom GitLab:
    integrations:
      gitlab:
        - host: gitlab.com
          token: ${DATA_E2E_GIT_TOKEN}
          apiBaseUrl: ${DATA_E2E_GIT_TAP_CATALOG_PATH}/api/v4/
    backend:
      reading:
        allow:
          - host: gitlab.com # Example URL: gitlab.example.com

metadata_store:
  ns_for_export_app_cert: "*"
  app_service_type: ClusterIP # Defaults to LoadBalancer. If shared.ingress_domain is set earlier, this must be set to ClusterIP.